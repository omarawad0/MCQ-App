{"version":3,"sources":["helpers/shuffleQuestionHelper.js","redux/actionTypes.js","redux/actions.js","components/Enroll.js","helpers/checkAnswer.js","components/Questions.js","components/Score.js","App.js","redux/initialState.js","redux/reducer.js","redux/store.js","index.js"],"names":["shuffleQuestionsHelper","originalArray","temporaryValue","randomIndex","array","currentIndex","length","Math","floor","random","ENROLL_STUDENT","NEXT_STEP","DECREMENT_SCORE","SHUFFLE_QUESTIONS","RESET_SCORE","enrollStudent","payload","type","nextStep","Enroll","useState","studentName","setStudentName","dispatch","useDispatch","questions","useSelector","state","Box","width","mt","FormControl","fullWidth","mb","TextField","variant","label","size","value","onChange","e","newName","target","Button","onClick","name","trim","shuffledQuestions","checkAnswer","answer","Questions","currentQuestion","setCurrentQuestion","setAnswer","question","answers","isLastQuestion","Typography","fontSize","List","sx","aria-label","disablePadding","map","a","i","ListItem","ListItemButton","textAlign","selected","ListItemText","primary","isCorrect","prev","Score","score","Alert","severity","half","scoreSeverity","AlertTitle","App","currentStep","steps","ENROLL","QUESTIONS","SCORE","Container","maxWidth","fontWeight","initialState","studenName","id","reducer","action","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.aa65c718.chunk.js","sourcesContent":["const shuffleQuestionsHelper = (originalArray) => {\r\n  const array = [...originalArray];\r\n  let currentIndex = array.length;\r\n  let temporaryValue;\r\n  let randomIndex;\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport default shuffleQuestionsHelper;\r\n","export const ENROLL_STUDENT = \"ENROLL_STUDENT\";\r\nexport const NEXT_STEP = \"NEXT_STEP\";\r\nexport const DECREMENT_SCORE = \"DECREMENT_SCORE\";\r\nexport const SHUFFLE_QUESTIONS = \"SHUFFLE_QUESTIONS\";\r\nexport const RESET_SCORE = \"RESET_SCORE\";\r\n","import {\r\n  DECREMENT_SCORE,\r\n  ENROLL_STUDENT,\r\n  NEXT_STEP,\r\n  RESET_SCORE,\r\n  SHUFFLE_QUESTIONS,\r\n} from \"./actionTypes\";\r\n\r\nconst enrollStudent = (payload) => ({ type: ENROLL_STUDENT, payload });\r\nconst nextStep = (payload) => ({ type: NEXT_STEP, payload });\r\nconst decrementScore = (payload) => ({ type: DECREMENT_SCORE, payload });\r\nconst shuffleQuestions = (payload) => ({ type: SHUFFLE_QUESTIONS, payload });\r\nconst resetScore = (payload) => ({ type: RESET_SCORE, payload });\r\n\r\nexport {\r\n  enrollStudent,\r\n  nextStep,\r\n  decrementScore,\r\n  shuffleQuestions,\r\n  resetScore,\r\n};\r\n","import { FormControl, Button, TextField } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport shuffleQuestionsHelper from \"../helpers/shuffleQuestionHelper\";\r\nimport { enrollStudent, nextStep, shuffleQuestions } from \"../redux/actions\";\r\n\r\nfunction Enroll() {\r\n  const [studentName, setStudentName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { questions } = useSelector((state) => state);\r\n\r\n  const nameChangeHandler = (e) => {\r\n    const newName = e.target.value;\r\n    setStudentName(newName);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const name = studentName.trim();\r\n    if (name) {\r\n      dispatch(enrollStudent(name));\r\n      const shuffledQuestions = shuffleQuestionsHelper(questions);\r\n      dispatch(shuffleQuestions(shuffledQuestions));\r\n      dispatch(nextStep(\"QUESTIONS\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box width=\"100%\" mt={5}>\r\n      <FormControl fullWidth mb={5}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"Your Name\"\r\n          type=\"text\"\r\n          size=\"large\"\r\n          value={studentName}\r\n          onChange={nameChangeHandler}\r\n        />\r\n      </FormControl>\r\n      <Box width=\"100%\" mt={3}>\r\n        <Button variant=\"contained\" fullWidth onClick={handleClick}>\r\n          Next\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Enroll;\r\n","const checkAnswer = (answer) => {\r\n  return answer === Math.floor(Math.random() * 4);\r\n};\r\n\r\nexport default checkAnswer;\r\n","import {\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useState } from \"react\";\r\nimport checkAnswer from \"../helpers/checkAnswer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { nextStep, decrementScore } from \"../redux/actions\";\r\n\r\nfunction Questions() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answer, setAnswer] = useState(null);\r\n  const { questions } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const { question, answers } = questions[currentQuestion];\r\n\r\n  const onAnswerClick = (answerIndex) => {\r\n    setAnswer(answerIndex);\r\n  };\r\n\r\n  const isLastQuestion = () => {\r\n    return currentQuestion === questions.length - 1;\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (answer != null) {\r\n      const isCorrect = checkAnswer(answer);\r\n      dispatch(decrementScore(!isCorrect));\r\n      setAnswer(null);\r\n      isLastQuestion()\r\n        ? dispatch(nextStep(\"SCORE\"))\r\n        : setCurrentQuestion((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"p\" fontSize=\"20px\">\r\n        {question}\r\n      </Typography>\r\n      <List sx={{ width: \"100%\" }} aria-label=\"contacts\" disablePadding>\r\n        {answers.map((a, i) => (\r\n          <ListItem key={a} onClick={() => onAnswerClick(i)}>\r\n            <ListItemButton\r\n              sx={{ textAlign: \"center\" }}\r\n              selected={i === answer}\r\n            >\r\n              <ListItemText primary={a} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Button variant=\"contained\" onClick={handleNextQuestion}>\r\n        {isLastQuestion() ? \"Finsih\" : \"Next\"}\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Questions;\r\n","import { Alert, AlertTitle, Button, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { nextStep, enrollStudent, resetScore } from \"../redux/actions\";\r\n\r\nfunction Score() {\r\n  const { score, questions } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const scoreSeverity = () => {\r\n    const half = Math.floor(questions.length / 2);\r\n    if (score >= half) {\r\n      return \"success\";\r\n    } else {\r\n      return \"error\";\r\n    }\r\n  };\r\n\r\n  const resetQuiz = () => {\r\n    dispatch(resetScore(questions.length));\r\n    dispatch(enrollStudent(\"\"));\r\n    dispatch(nextStep(\"ENROLL\"));\r\n  };\r\n  return (\r\n    <Box>\r\n      <Box mt={5}>\r\n        <Typography variant=\"h4\">Final Score</Typography>\r\n        <Alert severity={scoreSeverity()}>\r\n          <AlertTitle>Results</AlertTitle>\r\n          You scored — <strong>{`${score}/${questions.length}`}</strong>\r\n        </Alert>\r\n      </Box>\r\n      <Box mt={2}>\r\n        <Button variant=\"contained\" onClick={resetQuiz}>\r\n          Reset\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Enroll from \"./components/Enroll\";\nimport Questions from \"./components/Questions\";\nimport Score from \"./components/Score\";\nimport { useSelector } from \"react-redux\";\nfunction App() {\n  const { currentStep } = useSelector((state) => state);\n\n  const steps = {\n    ENROLL: <Enroll />,\n    QUESTIONS: <Questions />,\n    SCORE: <Score />,\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box textAlign=\"center\" mt={10}>\n        <Typography variant=\"h2\" fontWeight=\"bold\">\n          MCQ App\n        </Typography>\n        {steps[currentStep]}\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  studenName: \"\",\r\n  currentStep: \"ENROLL\",\r\n  questions: [\r\n    {\r\n      question: \"What is the best frontend Framework?\",\r\n      id: \"1\",\r\n      answers: [\"React\", \"Angular\", \"Vue\", \"Ember\"],\r\n    },\r\n    {\r\n      question: \"How many rings are on the Olympic flag?\",\r\n      id: \"2\",\r\n      answers: [\"None\", \"4\", \"5\", \"7\"],\r\n    },\r\n    {\r\n      question:\r\n        \"In darts, whats the most points you can score with a single throw?\",\r\n      id: \"3\",\r\n      answers: [\"20\", \"60\", \"100\", \"30\"],\r\n    },\r\n    {\r\n      question: \"How many holes are on a standard bowling ball?\",\r\n      id: \"4\",\r\n      answers: [\"5\", \"6\", \"7\", \"2\"],\r\n    },\r\n    {\r\n      question:\r\n        \"In the nursery rhyme, how many blackbirds were baked in a pie?\",\r\n      id: \"5\",\r\n      answers: [\"11\", \"20\", \"44\", \"24\"],\r\n    },\r\n  ],\r\n  score: 5,\r\n};\r\n\r\nexport default initialState;\r\n","import {\r\n  ENROLL_STUDENT,\r\n  NEXT_STEP,\r\n  SHUFFLE_QUESTIONS,\r\n  DECREMENT_SCORE,\r\n  RESET_SCORE,\r\n} from \"./actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ENROLL_STUDENT:\r\n      return {\r\n        ...state,\r\n        studenName: action.payload,\r\n      };\r\n    case NEXT_STEP:\r\n      return {\r\n        ...state,\r\n        currentStep: action.payload,\r\n      };\r\n    case SHUFFLE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        questions: action.payload,\r\n      };\r\n    case DECREMENT_SCORE:\r\n      return {\r\n        ...state,\r\n        score: action.payload ? state.score - 1 : state.score,\r\n      };\r\n    case RESET_SCORE:\r\n      return {\r\n        ...state,\r\n        score: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport default createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}